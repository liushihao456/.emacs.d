#+BEGIN_SRC emacs-lisp :tangle yes :session
  (setq yahoo-weather-locationid "1816670")
  (setq yahoo-weather-apikey "e5f1e557685536c2fe98e7dfabe201de")
  (yahoo-weather-get-query-url yahoo-weather-locationid yahoo-weather-apikey)
#+END_SRC

#+RESULTS:
: http://api.openweathermap.org/data/2.5/weather?id=1816670&appid=e5f1e557685536c2fe98e7dfabe201de

#+BEGIN_SRC emacs-lisp :tangle yes :session
  (load-file "~/.emacs.d/packages/yahoo-weather/yahoo-weather.el")
  (yahoo-weather-update-info)
  (print yahoo-weather-info)
#+END_SRC

#+RESULTS:
: ((coord (lon . 116.4) (lat . 39.91)) (weather . [((id . 800) (main . Clear) (description . clear sky) (icon . 01d))]) (base . stations) (main (temp . 295.25) (pressure . 1011) (humidity . 7) (temp_min . 293.15) (temp_max . 298.15)) (visibility . 10000) (wind (speed . 5) (deg . 270) (gust . 10)) (clouds (all . 0)) (dt . 1553489181) (sys (type . 1) (id . 9609) (message . 0.0049) (country . CN) (sunrise . 1553465455) (sunset . 1553509807)) (id . 1816670) (name . Beijing) (cod . 200))


#+BEGIN_SRC emacs-lisp :tangle yes :session
  ((coord (lon . 116.4) (lat . 39.91))
   (weather . [((id . 800) (main . Clear) (description . clear sky) (icon . 01d))])
   (base . stations)
   (main (temp . 294.87) (pressure . 1011) (humidity . 7) (temp_min . 294.15) (temp_max . 295.37))
   (visibility . 10000)
   (wind (speed . 5) (deg . 330))
   (clouds (all . 0))
   (dt . 1553487081)
   (sys (type . 1) (id . 9609) (message . 0.0035) (country . CN) (sunrise . 1553465455) (sunset . 1553509807))
   (id . 1816670)
   (name . Beijing)
   (cod . 200))
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle yes :session
  (alist-get 'main (elt (alist-get 'weather yahoo-weather-info) 0))
#+END_SRC

#+RESULTS:
: Clear

#+BEGIN_SRC emacs-lisp :tangle yes
  (defvar tmp)
  (setq tmp (yahoo-weather--extract-from-json-object yahoo-weather-info '(sys sunset)))
  (print tmp)
  (format-time-string "%H:%M" tmp)
  ;; (setq format-string (replace-regexp-in-string "%(sunset-time)" tmp format-string t))
#+END_SRC

#+RESULTS:
: 18:30

#+BEGIN_SRC emacs-lisp :tangle yes :session
  (load-file "~/.emacs.d/packages/yahoo-weather/yahoo-weather.el")
  (setq yahoo-weather-format "[%(sunset-time) %(weather)]")
  (yahoo-weather-info-format yahoo-weather-info yahoo-weather-format)
#+END_SRC

#+RESULTS:
: [18:30 Clear]

#+BEGIN_SRC emacs-lisp :tangle yes :session
  (string-to-number (yahoo-weather--extract-from-json-object yahoo-weather-info '(main temp)))
#+END_SRC

#+RESULTS:
: 294.87
